version: '2'

services:

{% if docker_nginx_letsencrypt_use_sslh %}

  # SSLH can split VPN / HTTPS trafic coming to 443 and redirect to correct container
  sslh:
    container_name: sslh
    image: amondit/sslh
    ports:
      - "443:443"
    network_mode: host
    environment:
      HTTPS_HOST: 127.0.0.1
      HTTPS_PORT: {{ docker_nginx_letsencrypt_https_port }}
      OPENVPN_HOST: {{ docker_nginx_letsencrypt_sslh_openvpn_host }}
      OPENVPN_PORT: {{ docker_nginx_letsencrypt_sslh_openvpn_port }}

{% endif %}

  nginx:
    container_name: nginx
    image: nginx
    ports:
      - "{{ docker_nginx_letsencrypt_http_port }}:80"
      - "{{ docker_nginx_letsencrypt_https_port }}:443"
    volumes:
      - /etc/nginx/conf.d
      - /etc/nginx/vhost.d
      - /usr/share/nginx/html
      - {{ docker_letsencrypt_certs_path }}:/etc/nginx/certs:ro

  nginx-gen:
    container_name: nginx-gen
    image: jwilder/docker-gen
    volumes_from: 
      - nginx
    volumes:
      - {{ docker_letsencrypt_nginx_tmpl_path }}:/etc/docker-gen/templates/nginx.tmpl:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
    command: "-notify-sighup nginx -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf"

  nginx-letsencrypt:
    container_name: nginx-letsencrypt
    image: jrcs/letsencrypt-nginx-proxy-companion
    volumes_from:
      - nginx
    volumes:
      - {{ docker_letsencrypt_certs_path }}:/etc/nginx/certs:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - NGINX_PROXY_CONTAINER=nginx
      - NGINX_DOCKER_GEN_CONTAINER=nginx-gen

networks:
  default:
    external:
      name: nginx-proxy